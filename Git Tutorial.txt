Git Tutorial :)

I know some of you may not have used git before (or you could use a reminder about the commands - if I'm being honest I refer to them often) so I whipped up this basic tutorial about how to work using git. 

The idea with GitHub (and more generally git) is to allow for different versions of a code base to be worked on simultaneously without affecting the existing code (there are other purposes but this is the defining principle). 


One note is that everything that is done here is done through the command line. All of these operations can also be done using Github's website. There are lots of great tutorials online if you have any problems or want to know more about using Github. 

Step 1: 
git clone https://github.com/hillspen/qgan.git

Cloning will make a local copy of the repository on your computer 

Step 2: 
open your terminal and go to the repository 
(a folder on your computer called Egan)
Command : cd ./qgan/

Step 3:
git checkout -b meanful_branch_name
git status to make sure you are on your branch
Don't work on the master branch, always make a new branch.

Step 4: 
Edit, add files, do any changes in the folder

Step 5: 
Add your changes using: git add --all
This moves your files to the staging area

Step 6:
git commit -m “some explanation here”
Commit your changes 
This adds changes to the local repository

Step 7: 
Push you changes to the remote repository (shared with everyone)
git push origin -u meanful_branch_name

Step 8:
Go to Github and make a pull request so people can approve your changes before you merge into the master branch (if you are just adding a file that doesn't affect the rest of the code you can ignore this step). 

EXTRA:
To check the status or to check on what branch you are: git status 
To update your local repository with new changes from the remote repo: git pull
When you merge your branch into the master branch (after pull request is approved) then you either delete your branch or you update it (git pull)
If you delete your branch you can just make a new one

**Make sure you don't work directly in the master branch
